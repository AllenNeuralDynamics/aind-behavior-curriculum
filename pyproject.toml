[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-behavior-curriculum"
description = "Generated from aind-library-template"
license = {text = "MIT"}
requires-python = ">=3.11"
authors = [
    { name = "Jonathan Wong", email = "jonathan.wong@alleninstitute.org" },
    { name = "Bruno Cruz", email = "bruno.cruz@alleninstitute.org" },
]

classifiers = [
    "Programming Language :: Python :: 3"
]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    "pydantic > 2.7",
    "semver >= 3.0",
    "jinja2 >= 3.1.3",
]

[project.optional-dependencies]

linters = [
    "ruff",
    "codespell",
    "coverage",
    "interrogate"
]
docs = [
    "Sphinx",
    "furo",
    "sphinx-jinja",
    "sphinx_mdinclude",
]


[tool.setuptools.packages.find]
where = ["src", "examples"]

[tool.setuptools.package-data]
aind_behavior_curriculum = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "aind_behavior_curriculum.__version__"}
readme = { file = "README.md", content-type = "text/markdown" }

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "I"]
extend-ignore = []
mccabe = { max-complexity = 14 }
pydocstyle = { convention = "google" }

[tool.codespell]
skip = ".git,*.pdf,*.svg,uv.lock,./docs,./build,./htmlcov"

ignore-words-list = "nd, assertIn"

[tool.coverage.run]
omit = ["*__init__*"]
source = ["aind_behavior_curriculum", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "from",
    "import",
    "pragma: no cover"
]
fail_under = 88

[tool.interrogate]
exclude = ["setup.py", "docs", "build", "tests/", "examples/"]
fail-under = 100
